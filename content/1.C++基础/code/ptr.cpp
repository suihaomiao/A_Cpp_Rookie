#include <iostream>

using namespace std;

#define LOG(x) cout << x << endl;

int main(){
    int val = 8;
    //&是一个解地址符，意思是向操作系统询问变量val的地址；
    //然后把这个地址给了ptr
    //注意，这里只是吧ptr声明成了void*类型，这样编译是可以通过的
    //因为，上面的结论：指针只是一个整数而已，跟它指向的类型无关；
    //后面会解释，为什么我们需要告诉编译器指向的内存的类型
    void* ptr = &val;

    //*是取地址符，即通过*可以拿到指针指向的内存
    //当我们试图去访问这个指针指向的内存的时候，我们会发现出错了
    //LOG(*ptr)         //erro，为什么会出错，我们继续往下看

    //刚才我们试图去取指针指向的内存时，出错了；
    //因为编译器不知道在取内存的时候应该取多大的，C++中有很多数据类型，例如：
    //char-1个字节；short-2个字节；int-4个字节；double-8个字节
    //在取地址的时候应该取多少呢？编译器不知道，所以我们需要告诉编译器，这个指针指向的内存有多大
    int* ptr2 = &val;
    LOG(*ptr2)  //成功打印出8，也就是val的地址

}